{"version":3,"file":"index.js","mappings":"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","sources":["webpack://murmurations-node/./src/components/description.js","webpack://murmurations-node/./src/components/env.js","webpack://murmurations-node/./src/components/image.js","webpack://murmurations-node/./src/components/location.js","webpack://murmurations-node/./src/components/mission.js","webpack://murmurations-node/./src/components/name.js","webpack://murmurations-node/./src/components/notifications.js","webpack://murmurations-node/./src/components/primary-url.js","webpack://murmurations-node/./src/components/rss.js","webpack://murmurations-node/./src/components/settings-screen.js","webpack://murmurations-node/./src/components/tags.js","webpack://murmurations-node/./src/components/urls.js","webpack://murmurations-node/./src/datastore/constants.js","webpack://murmurations-node/./src/datastore/index.js","webpack://murmurations-node/./src/admin.scss","webpack://murmurations-node/external window [\"wp\",\"apiFetch\"]","webpack://murmurations-node/external window [\"wp\",\"components\"]","webpack://murmurations-node/external window [\"wp\",\"coreData\"]","webpack://murmurations-node/external window [\"wp\",\"data\"]","webpack://murmurations-node/external window [\"wp\",\"element\"]","webpack://murmurations-node/external window [\"wp\",\"i18n\"]","webpack://murmurations-node/external window [\"wp\",\"mediaUtils\"]","webpack://murmurations-node/external window [\"wp\",\"notices\"]","webpack://murmurations-node/webpack/bootstrap","webpack://murmurations-node/webpack/runtime/compat get default export","webpack://murmurations-node/webpack/runtime/define property getters","webpack://murmurations-node/webpack/runtime/hasOwnProperty shorthand","webpack://murmurations-node/webpack/runtime/make namespace object","webpack://murmurations-node/./src/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { TextControl, PanelRow } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nimport { STORE_NAME } from '../datastore/constants';\n\nconst Description = () => {\n\t// Get the name from the state.\n\tconst description = useSelect( ( select ) =>\n\t\tselect( STORE_NAME ).getDescription()\n\t);\n\n\t// Update the state.\n\tconst { setDescription, setSetting } = useDispatch( STORE_NAME );\n\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={ __( 'Description', 'murmurations-node' ) }\n\t\t\tvalue={ description ?? '' }\n\t\t\tonChange={ ( value ) => setSetting( 'description', value ) }\n\t\t\thelp={ __(\n\t\t\t\t'A description of the item, entity, organization, project, etc.',\n\t\t\t\t'murmurations-node'\n\t\t\t) }\n\t\t/>\n\t);\n};\nexport default Description;\n","/**\n * WordPress dependencies\n */\nimport { ToggleControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { STORE_NAME } from '../datastore/constants';\n\nconst Env = () => {\n\t// Get the env from the state.\n\tconst env = useSelect( ( select ) =>\n\t\tselect( STORE_NAME ).getEnv()\n\t) ?? false;\n\n\t// Update the state.\n\tconst { setSetting } = useDispatch( STORE_NAME );\n\n\treturn (\n\t\t<ToggleControl\n\t\t\tchecked={ env }\n\t\t\tclassName=\"test-api\"\n\t\t\tlabel={ __( 'Use Test API', 'murmurations-node' ) }\n\t\t\thelp={ __( \n\t\t\t\t\"Please only publish genuine profiles to the Live API. For testing use the Test API.\", \n\t\t\t\t'murmurations-node' \n\t\t\t) }\n\t\t\tonChange={ ( value ) => setSetting( 'env', value ) }\n\t\t/>\n\t);\n};\nexport default Env;\n","/**\n * WordPress dependencies\n */\nimport { Button, PanelRow } from '@wordpress/components';\nimport { MediaUpload } from '@wordpress/media-utils';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { STORE_NAME } from '../datastore/constants';\n\nconst ALLOWED_MEDIA_TYPES = [ 'image' ];\n\nfunction Image() {\n\tconst media =\n\t\tuseSelect( ( select ) => select( STORE_NAME ).getImage() ) ?? '';\n\n\tconst { setSetting } = useDispatch( STORE_NAME );\n\n\tconst handleMedia = ( newMedia = null ) => {\n\t\tif ( newMedia === null ) {\n\t\t\tsetSetting( 'image', '' );\n\t\t} else {\n\t\t\tsetSetting( 'image', newMedia.url );\n\t\t}\n\t};\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<label className=\"label-fieldset\">\n\t\t\t\t{ __( 'Image', 'murmurations-node' ) }\n\t\t\t</label>\n\t\t\t<PanelRow>\n\t\t\t\t{ ! media ? (\n\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\tonSelect={ ( newMedia ) => handleMedia( newMedia ) }\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\tvalue={ media ?? '' }\n\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={ open }>\n\t\t\t\t\t\t\t\t{ __( 'Open Media Library' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'An image that is generally used to refer to the entity, organization, project, etc.',\n\t\t\t\t\t\t\t'murmurations-node'\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={ media }\n\t\t\t\t\t\t\theight=\"250px\"\n\t\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\t\tclassName=\"image-preview\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"image-remove\"\n\t\t\t\t\t\t\ticon=\"no-alt\"\n\t\t\t\t\t\t\tlabel=\"Remove image\"\n\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\tonClick={ () => handleMedia( null ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t) }\n\t\t\t</PanelRow>\n\t\t</fieldset>\n\t);\n}\nexport default Image;\n","/**\n * WordPress dependencies\n */\nimport {\n\tTextControl,\n\tPanelRow,\n\tButton,\n\tPanelBody,\n\tSelectControl,\n\tRadioControl,\n\tSearchControl,\n\tDashicon,\n\tSpinner,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { STORE_NAME } from '../datastore/constants';\nimport apiFetch from '@wordpress/api-fetch';\nimport { useRef, forwardRef, useState } from '@wordpress/element';\n\nconst Location = () => {\n\t// Get data from the db.\n\tconst location = useSelect( ( select ) =>\n\t\tselect( STORE_NAME ).getLocation()\n\t);\n\tconst locality = useSelect( ( select ) =>\n\t\tselect( STORE_NAME ).getLocality()\n\t);\n\tconst region = useSelect( ( select ) => select( STORE_NAME ).getRegion() );\n\tconst country_name = useSelect( ( select ) =>\n\t\tselect( STORE_NAME ).getCountryName()\n\t);\n\tconst geolocation =\n\t\tuseSelect( ( select ) => select( STORE_NAME ).getGeoLocation() ) ?? {};\n\n\tconst [ isSearching, setIsSearching ] = useState( false );\n\tconst locationInputRef = useRef( '' );\n\tconst localityInputRef = useRef( '' );\n\tconst regionInputRef = useRef( '' );\n\tconst countryInputRef = useRef( '' );\n\tconst latInputRef = useRef( '' );\n\tconst lonInputRef = useRef( '' );\n\n\t// Search OpenMaps API\n\tconst handleSearch = () => {\n\t\tsetIsSearching( true );\n\t\tapiFetch( {\n\t\t\tpath: 'murmurations/v2/find/location',\n\t\t\tmethod: 'POST',\n\t\t\tdata: { location },\n\t\t} )\n\t\t\t.then( ( response ) => JSON.parse( response.body ) )\n\t\t\t.then( ( body ) => {\n\t\t\t\tsetIsSearching( false );\n\t\t\t\t// TODO add some kind of select list\n\t\t\t\t// Use first result\n\t\t\t\tif ( ! body.length > 0 ) {\n\t\t\t\t\tconsole.log( 'no results found' );\n\t\t\t\t}\n\t\t\t\tlet first = body[ 0 ];\n\t\t\t\tlet locationArr = first.display_name.split( ', ' );\n\n\t\t\t\t// Populate fields\n\t\t\t\tlocationInputRef.current = first.display_name;\n\t\t\t\tcountryInputRef.current = locationArr.pop();\n\t\t\t\tregionInputRef.current = locationArr.pop();\n\t\t\t\tlocalityInputRef.current = locationArr.join( ', ' ).toString();\n\t\t\t\tlatInputRef.current = first.lat;\n\t\t\t\tlonInputRef.current = first.lon;\n\n\t\t\t\tsetSetting( 'location', locationInputRef.current );\n\t\t\t\tsetSetting( 'locality', localityInputRef.current );\n\t\t\t\tsetSetting( 'region', regionInputRef.current );\n\t\t\t\tsetSetting( 'country_name', countryInputRef.current );\n\t\t\t\thandleChange( 'lat', latInputRef.current );\n\t\t\t\thandleChange( 'lon', lonInputRef.current );\n\n\t\t\t\tlocationInputRef.current.focus();\n\t\t\t} );\n\t};\n\n\t// Update the state.\n\tconst { setSetting } = useDispatch( STORE_NAME );\n\n\tconst handleChange = ( key, value ) => {\n\t\tconst newGeolocation = geolocation;\n\t\tnewGeolocation[ key ] = value;\n\t\tsetSetting( 'geolocation', newGeolocation );\n\t};\n\n\treturn (\n\t\t<PanelBody className={ 'p-0' }>\n\t\t\t<PanelRow className=\"justify-inherit mt-10\">\n\t\t\t\t<SearchControl\n\t\t\t\t\tlabel={ __( 'Location', 'murmurations-node' ) }\n\t\t\t\t\thideLabelFromVision={ false }\n\t\t\t\t\tref={ locationInputRef }\n\t\t\t\t\tvalue={ location }\n\t\t\t\t\tonChange={ ( value ) => setSetting( 'location', value ) }\n\t\t\t\t\tonKeyPress={ ( event ) => {\n\t\t\t\t\t\tif ( event.key === 'Enter' ) {\n\t\t\t\t\t\t\thandleSearch();\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'Lookup your location to fill in the values below.',\n\t\t\t\t\t\t'murmurations-node'\n\t\t\t\t\t) }\n\t\t\t\t\tclassName={ 'murmurations-search-field' }\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\ticon={ 'search' }\n\t\t\t\t\tonClick={ handleSearch }\n\t\t\t\t\tclassName={ 'location-search' }\n\t\t\t\t\tdisabled={ isSearching }\n\t\t\t\t>\n\t\t\t\t\t{ isSearching ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{ __( 'Searching...', 'murmurations-node' ) }\n\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t__( 'Search', 'murmurations-node' )\n\t\t\t\t\t) }\n\t\t\t\t</Button>\n\t\t\t</PanelRow>\n\t\t\t<PanelRow className=\"align-start gap-5\">\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Locality', 'murmurations-node' ) }\n\t\t\t\t\tref={ localityInputRef }\n\t\t\t\t\tvalue={ locality ?? '' }\n\t\t\t\t\tonChange={ ( value ) => setSetting( 'locality', value ) }\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'The locality (city, town, village, etc.) where the entity is located',\n\t\t\t\t\t\t'murmurations-node'\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Region', 'murmurations-node' ) }\n\t\t\t\t\tref={ regionInputRef }\n\t\t\t\t\tvalue={ region ?? '' }\n\t\t\t\t\tonChange={ ( value ) => setSetting( 'region', value ) }\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'The region (state, county, province, etc.) where the entity is located',\n\t\t\t\t\t\t'murmurations-node'\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Country', 'murmurations-node' ) }\n\t\t\t\t\tref={ countryInputRef }\n\t\t\t\t\tvalue={ country_name ?? '' }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetSetting( 'country_name', value )\n\t\t\t\t\t}\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'The name of country where the entity is based',\n\t\t\t\t\t\t'murmurations-node'\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t\t<TextControl\n\t\t\t\t\tref={ latInputRef }\n\t\t\t\t\tlabel={ __( 'Latitude', 'murmurations-node' ) }\n\t\t\t\t\tvalue={ geolocation.lat ?? '' }\n\t\t\t\t\tonChange={ ( value ) => handleChange( 'lat', value ) }\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'The geo-coordinates (latitude)',\n\t\t\t\t\t\t'murmurations-node'\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t\t<TextControl\n\t\t\t\t\tref={ lonInputRef }\n\t\t\t\t\tlabel={ __( 'Longitude', 'murmurations-node' ) }\n\t\t\t\t\tvalue={ geolocation.lon ?? '' }\n\t\t\t\t\tonChange={ ( value ) => handleChange( 'lon', value ) }\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'The geo-coordinates (longitude)',\n\t\t\t\t\t\t'murmurations-node'\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</PanelRow>\n\t\t</PanelBody>\n\t);\n};\nexport default Location;\n","/**\n * WordPress dependencies\n */\nimport { TextControl, PanelRow } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { STORE_NAME } from '../datastore/constants';\n\nconst Mission = () => {\n\t// Get the name from the state.\n\tconst mission = useSelect( ( select ) =>\n\t\tselect( STORE_NAME ).getMission()\n\t);\n\n\t// Update the state.\n\tconst { setMission, setSetting } = useDispatch( STORE_NAME );\n\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={ __( 'Mission', 'murmurations-node' ) }\n\t\t\tvalue={ mission ?? '' }\n\t\t\tonChange={ ( value ) => setSetting( 'mission', value ) }\n\t\t\thelp={ __(\n\t\t\t\t'A short statement of why the entity exists and its goals.',\n\t\t\t\t'murmurations-node'\n\t\t\t) }\n\t\t/>\n\t);\n};\nexport default Mission;\n","/**\n * WordPress dependencies\n */\nimport { TextControl, PanelRow } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nimport { STORE_NAME } from '../datastore/constants';\n\nconst Name = () => {\n\t// Get the name from the state.\n\tconst name = useSelect( ( select ) => select( STORE_NAME ).getName() );\n\n\t// Update the state.\n\tconst { setName, setToggleState, setSetting } = useDispatch( STORE_NAME );\n\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={ __( 'Name', 'murmurations-node' ) }\n\t\t\tvalue={ name ?? '' }\n\t\t\tonChange={ ( value ) => setSetting( 'name', value ) }\n\t\t\thelp={ __(\n\t\t\t\t'The name of the entity, organization, project, item, etc.',\n\t\t\t\t'murmurations-node'\n\t\t\t) }\n\t\t/>\n\t);\n};\nexport default Name;\n","import { store as noticesStore } from '@wordpress/notices';\nimport {\n\tButton,\n\tPanel,\n\tPanelBody,\n\tPanelRow,\n\tSearchControl,\n\tSpinner,\n\tSnackbarList,\n} from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nconst Notifications = () => {\n\tconst notices = useSelect(\n\t\t( select ) => select( noticesStore ).getNotices(),\n\t\t[]\n\t);\n\tconst { removeNotice } = useDispatch( noticesStore );\n\tconst snackbarNotices = notices.filter(\n\t\t( { type } ) => type === 'snackbar'\n\t);\n\n\treturn (\n\t\t<SnackbarList\n\t\t\tnotices={ snackbarNotices }\n\t\t\tclassName=\"components-editor-notices__snackbar\"\n\t\t\tonRemove={ removeNotice }\n\t\t/>\n\t);\n};\n\nexport default Notifications;\n","/**\n * WordPress dependencies\n */\nimport { TextControl, PanelRow } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nimport { STORE_NAME } from '../datastore/constants';\n\nconst PrimaryUrl = () => {\n\t// Get the name from the state.\n\tconst primaryUrl = useSelect( ( select ) =>\n\t\tselect( STORE_NAME ).getPrimaryUrl()\n\t);\n\n\t// Update the state.\n\tconst { setPrimaryUrl, setToggleState, setSetting } =\n\t\tuseDispatch( STORE_NAME );\n\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={ __( 'Primary URL', 'murmurations-node' ) }\n\t\t\tvalue={ primaryUrl ?? '' }\n\t\t\tonChange={ ( value ) => setSetting( 'primary_url', value ) }\n\t\t\thelp={ __(\n\t\t\t\t'The primary URL of the entity or item (i.e., its unique website address)',\n\t\t\t\t'murmurations-node'\n\t\t\t) }\n\t\t/>\n\t);\n};\nexport default PrimaryUrl;\n","/**\n * WordPress dependencies\n */\nimport { TextControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { STORE_NAME } from '../datastore/constants';\n\nconst Rss = () => {\n\t// Get the name from the state.\n\tconst rss = useSelect( ( select ) => select( STORE_NAME ).getRSS() );\n\n\t// Update the state.\n\tconst { setRss, setSetting } = useDispatch( STORE_NAME );\n\n\t//change component\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={ __( 'RSS', 'murmurations-node' ) }\n\t\t\tvalue={ rss ?? '' }\n\t\t\tonChange={ ( value ) => setSetting( 'rss', value ) }\n\t\t\thelp={ __(\n\t\t\t\t\"The URL for the entity's RSS feed\",\n\t\t\t\t'murmurations-node'\n\t\t\t) }\n\t\t/>\n\t);\n};\nexport default Rss;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport apiFetch from '@wordpress/api-fetch';\nimport { Button, ButtonGroup, ToggleControl, Panel, PanelBody, PanelRow, FormToggle, Spinner } from '@wordpress/components';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { useDispatch, useSelect, coreDataStore } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data'; // do I need this?\nimport { STORE_NAME } from '../datastore/constants';\nimport { useState } from '@wordpress/element';\n/**\n * Internal dependencies\n */\nimport '../datastore/index';\nimport Name from './name';\nimport PrimaryUrl from './primary-url';\nimport Urls from './urls';\nimport Description from './description';\nimport Mission from './mission';\nimport Location from './location';\nimport Image from './image';\nimport Tags from './tags';\nimport Rss from './rss';\nimport Env from './env';\nimport Notifications, { createSuccessNotice, createErrorNotice } from './notifications';\n\nconst SettingsScreen = () => {\n\tconst { saveEntityRecord, getLastEntitySaveError, hasFinishedResolution, isSavingEntityRecord } = useDispatch('core');\n\tconst [ isRequesting, setIsRequesting ] = useState( false );\n\tconst [ isPublishing, setIsPublishing ] = useState( false );\n\tconst [ isValidating, setIsValidating ] = useState( false );\n\tconst [ isWorking, setIsWorking ] = useState( false );\n\tconst [ isGettingStatus, setIsGettingStatus ] = useState( false );\n\tconst { createSuccessNotice, createErrorNotice } = useDispatch( noticesStore );\n\tconst env = useSelect((select) => select(STORE_NAME).getEnv());\n\n\t// Gets all settings from the store.\n\tconst { settingsFromState, hasResolved } = useSelect(\n\t\t( select ) => {\n\t\t\treturn {\n\t\t\t\tsettingsFromState: select(STORE_NAME).getSettings(),\n\t\t\t\thasResolved: select(STORE_NAME).hasFinishedResolution(\n\t\t\t\t\t'getSettings'\n\t\t\t\t),\n\t\t\t}\n\t});\n\n\tconst handleSave = async () => {\n\t\tsetIsRequesting(true);\n\t\tconst success = await saveEntityRecord('root', 'site', {\n\t\t\t\t\t\t\t'murmurations-node_data':\n\t\t\t\t\t\t\t\tsettingsFromState,\n\t\t\t\t\t\t} )\n\t\tif ( success ) {\n\t\t\tcreateSuccessNotice( __(\"The settings were saved!\", 'murmurations-node'), {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t\tsetIsRequesting(false);\n\t\t} else {\n\t\t\tconst lastError = getLastEntitySaveError( 'root', 'site', {\n\t\t\t\t\t\t\t\t\t'murmurations-node_data':\n\t\t\t\t\t\t\t\t\t\tsettingsFromState,\n\t\t\t\t\t\t\t\t} );\n\t\t\tconst refresh = __('Please refresh the page and try again.', 'murmurations-node')\n\t\t\tconst genericError = __('There was an error. ', 'murmurations-node')\n\t\t\tconst message = ( lastError?.message || genericError ) + refresh\n\t\t\tcreateErrorNotice( message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t\tsetIsRequesting(false);\n\t\t}\n\t};\n\t\n\tconst handleValidate = async () => {\n\t\tsetIsValidating(true);\n\t\tconst status = await apiFetch( { path: '/murmurations/v2/index/validate' } ).then( ( posts ) => {\n\t\t\tconsole.log( posts );\n\t\t\treturn posts;\n\t\t\t} )\n\t\tif ( ! status.errors ) {\n\t\t\tcreateSuccessNotice( status.meta.message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t} else {\n\t\t\tconsole.log( status.errors );\n\t\t\tstatus.errors.forEach( error => {\n\t\t\t\tcreateErrorNotice( error.detail, {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t});\n\t\t}\n\t\tsetIsValidating(false);\n\t};\n\t\n\tconst handlePublish = async () => {\n\t\tsetIsPublishing(true);\n\t\tconst status = await apiFetch( { path: '/murmurations/v2/index/nodes_sync' } ).then( ( posts ) => {\n\t\t\tconsole.log( posts );\n\t\t\treturn posts;\n\t\t\t} )\n\t\tif ( ! status.errors ) {\n\t\t\tif ( env ) {\n\t\t\t\tlet responseMessage = `\n\t\t\t\t\tstatus: ${status.data.status} \\n\n\t\t\t\t\tnode_id: ${status.data.node_id} \\n\n\t\t\t\t\tprofile_url: ${status.data.profile_url} \\n\n\t\t\t\t\tlast_updated: ${status.data.last_updated}\n\t\t\t\t\t`\n\t\t\t} else {\n\t\t\t\tlet responseMessage = `${status.data.status}`\n\t\t\t}\n\t\t\tcreateSuccessNotice( responseMessage, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t\tsetIsPublishing(false);\n\t\t} else {\n\t\t\tif ( env ) {\n\t\t\t\tconsole.log( status.errors );\n\t\t\t}\n\t\t\tstatus.errors.forEach( error => {\n\t\t\t\tlet prefix = __('Server response: ', 'mumurations-node')\n\t\t\t\tlet errorMessage = `${prefix} ${error.detail}`\n\t\t\t\tcreateErrorNotice( errorMessage, {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t});\n\t\t\tsetIsPublishing(false);\n\t\t}\n\t};\n\n\tconst handleStatus = async () => {\n\t\tsetIsGettingStatus(true);\n\t\tconst status = await apiFetch( { path: '/murmurations/v2/index/node_status' } ).then( ( posts ) => {\n\t\t\tconsole.log( posts );\n\t\t\treturn posts;\n\t\t\t} )\n\t\tif ( status.data ) {\n\t\t\tconsole.log( status );\n\t\t\tlet responseMessage = `\n\t\t\t\tstatus: ${status.data.status} \\n\n\t\t\t\tnode_id: ${status.data.node_id} \\n\n\t\t\t\tprofile_url: ${status.data.profile_url} \\n\n\t\t\t\tlast_updated: ${status.data.last_updated}`;\n\t\t\tcreateSuccessNotice( responseMessage, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t} else {\n\t\t\tcreateErrorNotice( status, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t}\n\t\tsetIsGettingStatus( false );\n\t};\n\n\tconst handleSaveAndPublish = async () => {\n\t\tsetIsWorking(true)\n\t\thandleSave()\n\t\thandleValidate()\n\t\thandlePublish()\n\t\tif ( env ) {\n\t\t\thandleStatus()\n\t\t}\n\t\tsetIsWorking(false)\n\t};\n\n\tif ( ! hasResolved ) {\n\t\treturn <Spinner />;\n\t}\n\n\treturn (\n\t\t<div className=\"wrap\">\n\t\t\t<Panel header=\"Murmurations settings\">\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<Name />\n\t\t\t\t\t<PrimaryUrl />\n\t\t\t\t\t<Urls />\n\t\t\t\t\t<Description />\n\t\t\t\t\t<Mission />\n\t\t\t\t\t<Image />\n\t\t\t\t\t<Tags />\n\t\t\t\t\t<Rss />\n\t\t\t\t\t<Location />\n\t\t\t\t\t<Env />\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={ handleSaveAndPublish } disabled={ isWorking } >\n\t\t\t\t\t\t\t{ isWorking ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{ __( 'Saving & Publishing...', 'murmurations-node') }\n\t\t\t\t\t\t\t\t\t<Spinner/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : __( 'Save & Publish', 'murmurations-node') }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Notifications></Notifications>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</Panel>\n\t\t</div>\n\t);\n};\n\nexport default SettingsScreen;\n","/**\n * WordPress dependencies\n */\nimport { TextControl, PanelRow } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { STORE_NAME } from '../datastore/constants';\n\nconst Tags = () => {\n\t// Get the name from the state.\n\tconst tags = useSelect( ( select ) => select( STORE_NAME ).getTags() );\n\n\t// Update the state.\n\tconst { setTags, setSetting } = useDispatch( STORE_NAME );\n\n\t//change component\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={ __( 'Tags', 'murmurations-node' ) }\n\t\t\tvalue={ tags ?? '' }\n\t\t\tonChange={ ( value ) => setSetting( 'tags', value ) }\n\t\t\thelp={ __(\n\t\t\t\t'Keywords relevant to this entity and its activities or attributes.',\n\t\t\t\t'murmurations-node'\n\t\t\t) }\n\t\t/>\n\t);\n};\nexport default Tags;\n","/**\n * WordPress dependencies\n */\nimport {\n\tTextControl,\n\tPanelRow,\n\tButton,\n\tPanelBody,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { STORE_NAME } from '../datastore/constants';\n\nconst Urls = () => {\n\t// Get the name from the state.\n\tconst urls =\n\t\tuseSelect( ( select ) => select( STORE_NAME ).getUrls() ) ?? [];\n\n\tconst { setUrl, setToggleState, setSetting } = useDispatch( STORE_NAME );\n\n\tconst handleAddRow = ( index, row = { name: '', url: '' } ) => {\n\t\tconst newUrls = [ ...urls ];\n\t\tnewUrls.push( row );\n\t\tsetSetting( 'urls', newUrls );\n\t};\n\n\tconst handleRemoveRow = ( index ) => {\n\t\tconst newUrls = [ ...urls ];\n\t\tnewUrls.splice( index, 1 );\n\t\tsetSetting( 'urls', newUrls );\n\t};\n\n\tconst handleChange = ( key, value, index ) => {\n\t\tconst newUrls = [ ...urls ];\n\t\tnewUrls[ index ][ key ] = value;\n\t\tsetSetting( 'urls', newUrls );\n\t};\n\n\tconst RepeaterRow = urls.map( ( url, index ) => {\n\t\treturn (\n\t\t\t<PanelRow key={ index } className=\"gap-5\">\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Name', 'murmurations-node' ) }\n\t\t\t\t\tvalue={ url.name ?? '' }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\thandleChange( 'name', value, index )\n\t\t\t\t\t}\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'The name of what this URL is for (e.g., the name of the social media provider, website, etc.)',\n\t\t\t\t\t\t'murmurations-node'\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'URL', 'murmurations-node' ) }\n\t\t\t\t\tvalue={ url.url ?? '' }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\thandleChange( 'url', value, index )\n\t\t\t\t\t}\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'The URL (starting with http:// or https://) that links to the entity or further describes the item',\n\t\t\t\t\t\t'murmurations-node'\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"url-remove mt-20 self-start\"\n\t\t\t\t\ticon=\"no-alt\"\n\t\t\t\t\tlabel=\"Remove url\"\n\t\t\t\t\tisDestructive\n\t\t\t\t\tonClick={ () => handleRemoveRow( index ) }\n\t\t\t\t/>\n\t\t\t</PanelRow>\n\t\t);\n\t} );\n\n\treturn (\n\t\t<PanelRow>\n\t\t\t<fieldset>\n\t\t\t\t<legend>URLS</legend>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t{ RepeaterRow }\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"url-add\"\n\t\t\t\t\t\ticon=\"plus-alt2\"\n\t\t\t\t\t\tlabel=\"Add url\"\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tonClick={ () => handleAddRow( urls.length ) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</fieldset>\n\t\t</PanelRow>\n\t);\n};\nexport default Urls;\n","// Constants\nexport const STORE_NAME = 'murmurations-node';\nexport const DEFAULT_STATE = {};\n//\nexport const SET_NAME = 'SET_NAME';\nexport const SET_PRIMARY_URL = 'SET_PRIMARY_URL';\nexport const SET_URLS = 'SET_URLS';\nexport const SET_DESCRIPTION = 'SET_DESCRIPTION';\nexport const SET_MISSION = 'SET_MISSION';\nexport const SET_LOCATION = 'SET_LOCATION';\nexport const SET_LOCALITY = 'SET_LOCALITY';\nexport const SET_REGION = 'SET_REGION';\nexport const SET_COUNTRY_NAME = 'SET_COUNTRY_NAME';\nexport const SET_GEOLOCATION = 'SET_GEOLOCATION';\nexport const SET_IMAGE = 'SET_IMAGE';\nexport const SET_IMAGE_ID = 'SET_IMAGE_ID';\nexport const SET_TAGS = 'SET_TAGS';\nexport const SET_RSS = 'SET_RSS';\nexport const SET_ENV = 'SET_ENV';\n//\nexport const STATE_FROM_DATABASE = 'STATE_FROM_DATABASE';\nexport const FETCH_SETTINGS = 'FETCH_SETTINGS';\nexport const SET_SETTING = 'SET_SETTING';\nexport const SET_USER_PREFERENCES = 'SET_USER_PREFERENCES';\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { createReduxStore, register } from '@wordpress/data';\n\nimport {\n\tDEFAULT_STATE,\n\tSTATE_FROM_DATABASE,\n\tFETCH_SETTINGS,\n\tSET_SETTING,\n\tSTORE_NAME,\n\tSET_USER_PREFERENCES,\n\t// Murmurations\n\tSET_NAME,\n\tSET_PRIMARY_URL,\n\tSET_URLS,\n\tSET_DESCRIPTION,\n\tSET_MISSION,\n\tSET_LOCATION, //User convenience\n\tSET_LOCALITY,\n\tSET_REGION,\n\tSET_COUNTRY_NAME,\n\tSET_GEOLOCATION,\n\tSET_IMAGE,\n\tSET_IMAGE_ID,\n\tSET_TAGS,\n\tSET_RSS,\n\tSET_ENV,\n\t//\n} from './constants';\n\n// Define our actions\nconst actions = {\n\tinitSettings( settings ) {\n\t\treturn {\n\t\t\ttype: STATE_FROM_DATABASE,\n\t\t\tpayload: {\n\t\t\t\t...settings,\n\t\t\t},\n\t\t};\n\t},\n\tfetchSettings() {\n\t\treturn {\n\t\t\ttype: FETCH_SETTINGS,\n\t\t\tpayload: {},\n\t\t};\n\t},\n\n\tsetName( name ) {\n\t\treturn {\n\t\t\ttype: SET_NAME,\n\t\t\tpayload: {\n\t\t\t\tname,\n\t\t\t},\n\t\t};\n\t},\n\tsetPrimaryUrl( primary_url ) {\n\t\treturn {\n\t\t\ttype: SET_PRIMARY_URL,\n\t\t\tpayload: {\n\t\t\t\tprimary_url,\n\t\t\t},\n\t\t};\n\t},\n\tsetUrls( urls ) {\n\t\treturn {\n\t\t\ttype: SET_URLS,\n\t\t\tpayload: {\n\t\t\t\turls,\n\t\t\t},\n\t\t};\n\t},\n\tsetDescription( description ) {\n\t\treturn {\n\t\t\ttype: SET_DESCRIPTION,\n\t\t\tpayload: {\n\t\t\t\tdescription,\n\t\t\t},\n\t\t};\n\t},\n\tsetMission( mission ) {\n\t\treturn {\n\t\t\ttype: SET_MISSION,\n\t\t\tpayload: {\n\t\t\t\tmission,\n\t\t\t},\n\t\t};\n\t},\n\tsetLocation( location ) {\n\t\treturn {\n\t\t\ttype: SET_LOCATION,\n\t\t\tpayload: {\n\t\t\t\tlocation,\n\t\t\t},\n\t\t};\n\t},\n\tsetLocality( locality ) {\n\t\treturn {\n\t\t\ttype: SET_LOCALITY,\n\t\t\tpayload: {\n\t\t\t\tlocality,\n\t\t\t},\n\t\t};\n\t},\n\tsetRegion( region ) {\n\t\treturn {\n\t\t\ttype: SET_REGION,\n\t\t\tpayload: {\n\t\t\t\tregion,\n\t\t\t},\n\t\t};\n\t},\n\tsetCountryName( country_name ) {\n\t\treturn {\n\t\t\ttype: SET_COUNTRY_NAME,\n\t\t\tpayload: {\n\t\t\t\tcountry_name,\n\t\t\t},\n\t\t};\n\t},\n\tsetGeoLocation( geolocation ) {\n\t\treturn {\n\t\t\ttype: SET_GEOLOCATION,\n\t\t\tpayload: {\n\t\t\t\tgeolocation,\n\t\t\t},\n\t\t};\n\t},\n\tsetImage( image ) {\n\t\treturn {\n\t\t\ttype: SET_IMAGE,\n\t\t\tpayload: {\n\t\t\t\timage,\n\t\t\t},\n\t\t};\n\t},\n\tsetImageID( image_id ) {\n\t\treturn {\n\t\t\ttype: SET_IMAGE,\n\t\t\tpayload: {\n\t\t\t\timage_id,\n\t\t\t},\n\t\t};\n\t},\n\tsetTags( tags ) {\n\t\treturn {\n\t\t\ttype: SET_TAGS,\n\t\t\tpayload: {\n\t\t\t\ttags,\n\t\t\t},\n\t\t};\n\t},\n\tsetRSS( rss ) {\n\t\treturn {\n\t\t\ttype: SET_RSS,\n\t\t\tpayload: {\n\t\t\t\trss,\n\t\t\t},\n\t\t};\n\t},\n\tsetEnv( env ) {\n\t\treturn {\n\t\t\ttype: SET_ENV,\n\t\t\tpayload: {\n\t\t\t\tenv,\n\t\t\t},\n\t\t};\n\t},\n\n\tsetUserPreferences( userPreferences ) {\n\t\treturn {\n\t\t\ttype: SET_USER_PREFERENCES,\n\t\t\tpayload: {\n\t\t\t\tuserPreferences,\n\t\t\t},\n\t\t};\n\t},\n\tsetSetting( setting, value ) {\n\t\treturn {\n\t\t\ttype: SET_SETTING,\n\t\t\tpayload: {\n\t\t\t\tsetting,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\t},\n\t// setToggleState(section) {\n\t// \treturn function ({ select, dispatch }) {\n\t// \t\tconst currentValues = select.getUserPreferences();\n\t// \t\tconst sectionValue = currentValues[section];\n\t// \t\tdispatch.setUserPreferences({\n\t// \t\t\t...currentValues,\n\t// \t\t\t[section]: !sectionValue,\n\t// \t\t});\n\t// \t};\n\t// },\n};\n\n// Define the reducer\nfunction reducer( state = DEFAULT_STATE, { type, payload } ) {\n\tswitch ( type ) {\n\t\tcase STATE_FROM_DATABASE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...payload,\n\t\t\t};\n\t\tcase SET_SETTING:\n\t\t\tconst { setting, value } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ setting ]: value,\n\t\t\t};\n\t\tcase SET_NAME:\n\t\t\tconst { name } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tname,\n\t\t\t};\n\t\tcase SET_PRIMARY_URL:\n\t\t\tconst { primary_url } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprimary_url,\n\t\t\t};\n\t\tcase SET_URLS:\n\t\t\tconst { urls, index } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\turls: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: urls[ index ].name,\n\t\t\t\t\t\turl: urls[ index ].url,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t};\n\t\tcase SET_DESCRIPTION:\n\t\t\tconst { description } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdescription,\n\t\t\t};\n\t\tcase SET_MISSION:\n\t\t\tconst { mission } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmission,\n\t\t\t};\n\t\tcase SET_LOCATION:\n\t\t\tconst { location } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlocation,\n\t\t\t};\n\t\tcase SET_LOCALITY:\n\t\t\tconst { locality } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlocality,\n\t\t\t};\n\t\tcase SET_REGION:\n\t\t\tconst { region } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tregion,\n\t\t\t};\n\t\tcase SET_COUNTRY_NAME:\n\t\t\tconst { country_name } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcountry_name,\n\t\t\t};\n\t\tcase SET_GEOLOCATION:\n\t\t\tconst { geolocation } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgeolocation: {\n\t\t\t\t\tlat: geolocation.latitude,\n\t\t\t\t\tlon: geolocation.longitude,\n\t\t\t\t},\n\t\t\t};\n\t\tcase SET_IMAGE:\n\t\t\tconst { image } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\timage,\n\t\t\t};\n\t\tcase SET_IMAGE_ID:\n\t\t\tconst { image_id } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\timage_id,\n\t\t\t};\n\t\tcase SET_TAGS:\n\t\t\tconst { tags } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttags,\n\t\t\t};\n\t\tcase SET_RSS:\n\t\t\tconst { rss } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trss,\n\t\t\t};\n\t\tcase SET_ENV:\n\t\t\tconst { env } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tenv,\n\t\t\t};\n\n\t\tcase SET_USER_PREFERENCES:\n\t\t\tconst { userPreferences } = payload;\n\t\t\tif ( userPreferences ) {\n\t\t\t\twindow.localStorage.setItem(\n\t\t\t\t\t'murmurations-node-user-preferences',\n\t\t\t\t\tJSON.stringify( userPreferences )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserPreferences,\n\t\t\t};\n\t}\n\treturn state;\n}\n\n// Define some selectors\nconst selectors = {\n\tgetName( state ) {\n\t\treturn state.name;\n\t},\n\tgetPrimaryUrl( state ) {\n\t\treturn state.primary_url;\n\t},\n\tgetUrls( state ) {\n\t\treturn state.urls;\n\t},\n\tgetDescription( state ) {\n\t\treturn state.description;\n\t},\n\tgetMission( state ) {\n\t\treturn state.mission;\n\t},\n\tgetLocation( state ) {\n\t\treturn state.location;\n\t},\n\tgetLocality( state ) {\n\t\treturn state.locality;\n\t},\n\tgetRegion( state ) {\n\t\treturn state.region;\n\t},\n\tgetCountryName( state ) {\n\t\treturn state.country_name;\n\t},\n\tgetGeoLocation( state ) {\n\t\treturn state.geolocation;\n\t},\n\tgetImage( state ) {\n\t\treturn state.image;\n\t},\n\tgetImageID( state ) {\n\t\treturn state.image_id;\n\t},\n\tgetTags( state ) {\n\t\treturn state.tags;\n\t},\n\tgetRSS( state ) {\n\t\treturn state.rss;\n\t},\n\tgetEnv( state ) {\n\t\treturn state.env;\n\t},\n\tgetSettings( state ) {\n\t\tconst { ...settings } = state;\n\t\treturn settings;\n\t},\n\tgetUserPreferences( state ) {\n\t\treturn state.userPreferences;\n\t},\n};\n\nconst resolvers = {\n\tgetSettings() {\n\t\treturn async ( { dispatch } ) => {\n\t\t\tconst settings = await apiFetch( { path: '/wp/v2/settings' } );\n\t\t\tdispatch.initSettings( settings[ 'murmurations-node_data' ] );\n\t\t};\n\t},\n\tgetUserPreferences() {\n\t\treturn ( { dispatch } ) => {\n\t\t\tconst userPreferences =\n\t\t\t\twindow.localStorage.getItem(\n\t\t\t\t\t'murmurations-node-user-preferences'\n\t\t\t\t) || DEFAULT_STATE.userPreferences;\n\t\t\tdispatch.setUserPreferences( JSON.parse( userPreferences ) );\n\t\t};\n\t},\n};\n\n// Define and register the store.\nconst store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n\tresolvers,\n\t// __experimentalUseThunks: true,\n} );\n\nregister( store );\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"mediaUtils\"];","module.exports = window[\"wp\"][\"notices\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { render } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport SettingsScreen from './components/settings-screen';\nimport './admin.scss';\n\n// Render the app to the screen.\nrender( <SettingsScreen />, document.getElementById( 'murmurations-node' ) );\n"],"names":["TextControl","PanelRow","__","useDispatch","useSelect","STORE_NAME","Description","description","select","getDescription","setDescription","setSetting","value","ToggleControl","Env","env","getEnv","Button","MediaUpload","ALLOWED_MEDIA_TYPES","Image","media","getImage","handleMedia","newMedia","url","open","PanelBody","SelectControl","RadioControl","SearchControl","Dashicon","Spinner","apiFetch","useRef","forwardRef","useState","Location","location","getLocation","locality","getLocality","region","getRegion","country_name","getCountryName","geolocation","getGeoLocation","isSearching","setIsSearching","locationInputRef","localityInputRef","regionInputRef","countryInputRef","latInputRef","lonInputRef","handleSearch","path","method","data","then","response","JSON","parse","body","length","console","log","first","locationArr","display_name","split","current","pop","join","toString","lat","lon","handleChange","focus","key","newGeolocation","event","Mission","mission","getMission","setMission","Name","name","getName","setName","setToggleState","store","noticesStore","Panel","SnackbarList","Notifications","notices","getNotices","removeNotice","snackbarNotices","filter","type","PrimaryUrl","primaryUrl","getPrimaryUrl","setPrimaryUrl","Rss","rss","getRSS","setRss","ButtonGroup","FormToggle","coreDataStore","useEntityProp","Urls","Tags","createSuccessNotice","createErrorNotice","SettingsScreen","saveEntityRecord","getLastEntitySaveError","hasFinishedResolution","isSavingEntityRecord","isRequesting","setIsRequesting","isPublishing","setIsPublishing","isValidating","setIsValidating","isWorking","setIsWorking","isGettingStatus","setIsGettingStatus","settingsFromState","hasResolved","getSettings","handleSave","success","lastError","refresh","genericError","message","handleValidate","status","posts","errors","meta","forEach","error","detail","handlePublish","responseMessage","node_id","profile_url","last_updated","prefix","errorMessage","handleStatus","handleSaveAndPublish","tags","getTags","setTags","urls","getUrls","setUrl","handleAddRow","index","row","newUrls","push","handleRemoveRow","splice","RepeaterRow","map","DEFAULT_STATE","SET_NAME","SET_PRIMARY_URL","SET_URLS","SET_DESCRIPTION","SET_MISSION","SET_LOCATION","SET_LOCALITY","SET_REGION","SET_COUNTRY_NAME","SET_GEOLOCATION","SET_IMAGE","SET_IMAGE_ID","SET_TAGS","SET_RSS","SET_ENV","STATE_FROM_DATABASE","FETCH_SETTINGS","SET_SETTING","SET_USER_PREFERENCES","createReduxStore","register","actions","initSettings","settings","payload","fetchSettings","primary_url","setUrls","setLocation","setLocality","setRegion","setCountryName","setGeoLocation","setImage","image","setImageID","image_id","setRSS","setEnv","setUserPreferences","userPreferences","setting","reducer","state","latitude","longitude","window","localStorage","setItem","stringify","selectors","getImageID","getUserPreferences","resolvers","dispatch","getItem","render","document","getElementById"],"sourceRoot":""}